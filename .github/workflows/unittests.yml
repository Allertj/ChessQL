name: CI

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DOCKERFILE_FOR_COMPOSE: DockerfileRunTests
    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-python@v2

    - uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv
      with:
        requirement_files: requirements.txt  # this is optional

    - uses: syphar/restore-pip-download-cache@v1
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

    - run: pip install Cython
    - run: pip install -r requirements.txt
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'


    # - run: docker-compose build
    - run: docker-compose up --build -d
    - run: sleep 30s
    - run: python unittests.py 
    # - run: docker-compose up -d
    # - name: Test
      # run: docker-compose up --exit-code-from flaskbackend
      # run: docker-compose run --rm --entrypoint "python3 app/unittest.py"    
      # run: docker-compose run --rm --entrypoint "python3 manage.py test" app
  # test: &test
  #   <<: *default
  #   volumes: 
  #   - .:/app
  #   environment: { TEST }
  #   command: test/approve

# name: Python package

# on: [push]

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.9"]

#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install dependencies
#         run: |
#           source venv/bin/activate
#           python -m pip install --upgrade pip
#           pip install Cython
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#       - name: Test with pytest
#         run: |
#           python3.9 unittests.py

# name: Run Unittests

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#         uses: actions/checkout@v2 # checkout the repository content to github runner.
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.8
#           run: |
#             python -m pip install --upgrade pip
#             # pip install flake8 pytest
#             if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#           # ref: # branch
#             # my_other_branch
#       - name: execute py script # run file
#         run: |
#           python3.9 unittests.py